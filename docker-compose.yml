services:
  ollama:
    volumes:
      - ollama:/root/.ollama
    container_name: ollama
    pull_policy: always
    tty: true
    restart: unless-stopped
    image: ollama/ollama:${OLLAMA_DOCKER_TAG-latest}
    ports:
      - "11434:11434"
    networks:
      - ollama-network

  # Your GraphRAG application as a service
  graphrag-service:
    build:
      context: ./graphrag  # Path to your GraphRAG application
      dockerfile: Dockerfile
    container_name: graphrag-service
    ports:
      - "8001:8001"  # Adjust port as needed
    volumes:
      - ./graphrag/data:/app/data  # Mount your graph data
      - ./graphrag/config:/app/config  # Mount configuration
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - GRAPH_DB_PATH=/app/data/graph.db
    depends_on:
      - ollama
    restart: unless-stopped
    networks:
      - ollama-network

  open-webui:
    build:
      context: .
      args:
        OLLAMA_BASE_URL: '/ollama'
      dockerfile: Dockerfile
    image: ghcr.io/open-webui/open-webui:${WEBUI_DOCKER_TAG-main}
    container_name: open-webui
    volumes:
      - open-webui:/app/backend/data
      - ./openwebui/functions:/app/backend/functions  # Mount custom functions
    depends_on:
      - ollama
      - graphrag-service
    ports:
      - ${OPEN_WEBUI_PORT-3000}:8080
    environment:
      - 'OLLAMA_BASE_URL=http://ollama:11434'
      - 'WEBUI_SECRET_KEY='
      - 'GRAPHRAG_API_URL=http://graphrag-service:8001'  # Add GraphRAG endpoint
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    networks:
      - ollama-network

volumes:
  ollama: {}
  open-webui: {}

networks:
  ollama-network:
    driver: bridge